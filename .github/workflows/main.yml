name: Build APK with Dockerized Builder

on:
  push:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build with Docker
        run: |
          # 运行一个 ubuntu:20.04 的 Docker 容器，并把我们的代码挂载进去
          docker run --rm \
            -v ${{ github.workspace }}:/workdir \
            ubuntu:20.04 \
            /bin/bash -c " \
              set -ex; \
              export DEBIAN_FRONTEND=noninteractive; \
              # 在容器内部，更新并安装所有必需的依赖
              apt-get update; \
              apt-get install -y --no-install-recommends \
                git \
                zip \
                openjdk-17-jdk \
                python3-pip \
                python3-venv \
                autoconf \
                libtool \
                pkg-config \
                libncurses5-dev \
                libffi-dev \
                libssl-dev \
                zlib1g-dev; \
              # 创建一个虚拟环境并安装 buildozer
              python3 -m venv venv; \
              . venv/bin/activate; \
              pip install --upgrade pip; \
              pip install 'buildozer==1.5.0' cython; \
              # 进入工作目录并开始编译
              cd /workdir; \
              buildozer -v android debug; \
            "
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: stockmonitor-apk
          path: bin/*.apk
